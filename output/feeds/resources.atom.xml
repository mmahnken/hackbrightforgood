<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hack(bright) for Good</title><link href="http://hackbrightforgood.herokuapp.com/" rel="alternate"></link><link href="http://hackbrightforgood.herokuapp.com/feeds/resources.atom.xml" rel="self"></link><id>http://hackbrightforgood.herokuapp.com/</id><updated>2014-04-22T01:16:00+02:00</updated><entry><title>Advanced Computer Resources</title><link href="http://hackbrightforgood.herokuapp.com/advanced.html" rel="alternate"></link><updated>2014-04-22T01:16:00+02:00</updated><author><name>Meggie Mahnken</name></author><id>tag:hackbrightforgood.herokuapp.com,2014-04-22:advanced.html</id><summary type="html">&lt;h1&gt;Advanced Computer Science Resources&lt;/h1&gt;
&lt;h3&gt;&lt;a href="http://www.fullstackpython.com/"&gt;Full Stack Python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I was craving these bite-sized explanations of web architecture for a long time before I discovered this. It's a series of textbook-esque mini-articles about the "full stack"- it will help you understand servers, static assets, databases, &amp;amp;&amp;amp; more. Basically everything that makes a web app. It is like a who's who of technical jargon. &lt;/p&gt;
&lt;h3&gt;&lt;a href="http://12factor.net/"&gt;The Twelve Factor App&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Maintained by the folks at Heroku, this is a series of articles about a methodology for making web apps. This 12-factor methology addresses minimizing divergence between already-live code and developing code, the necessities of scaling up without restructuring, deploying on cloud platforms, and a lot more, all with less techno-babble and more technical details. &lt;/p&gt;
&lt;h3&gt;&lt;a href="https://www.atlassian.com/git/workflows#!workflow-feature-branch"&gt;Atlassian's Feature Branch Workflow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is an extremely important part of building-- having a process for safely adding (and perhaps, undoing) changes that you make. The feature branch workflow is one of a few git workflows. I like it because, frankly, I've never done anything else. Atlassian has a lot of other friendly neighborhood Git resources. Exploring is encouraged.&lt;/p&gt;</summary><category term="cs"></category><category term="deployment"></category><category term="heroku"></category></entry><entry><title>Full Stack Python Resources</title><link href="http://hackbrightforgood.herokuapp.com/beginners.html" rel="alternate"></link><updated>2014-04-20T01:23:00+02:00</updated><author><name>Meggie Mahnken</name></author><id>tag:hackbrightforgood.herokuapp.com,2014-04-20:beginners.html</id><summary type="html">&lt;h1&gt;Here are my go-to resources for beginners.&lt;/h1&gt;
&lt;h3&gt;&lt;a href="http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"&gt;Grinberg's Mega Tutuorial&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This tutorial taught me so much of what I do on a daily basis as a web developer. I shudder to think of myself without it, actually. Each part of the tutorial is a different part of a web app (user login, comments, etc.) It's a Flask tutorial, meaning that it uses a python framework that organizes the big cloud of files that go to make an "app" into an MVC (model view controller) type structure that's easier to use/develop/understand. Hooray!&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://learnpythonthehardway.org/book/preface.html"&gt;Learn Python the Hard Way&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The ever-useful Learn Python the Hard Way. I don't want to use the term crash course, but  Do it once. Then do it twice. Then go on vacation. When you come back, do it 5 more times. &lt;/p&gt;
&lt;h3&gt;&lt;a href="https://dash.generalassemb.ly/"&gt;Dash by GA&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The most gorgeous, clear, yet still free tutorial on HTML/CSS. Made by General Assembly.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://docs.python-guide.org/en/latest/scenarios/scrape/"&gt;LXML Scraping in Python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is what I used to learn how to do web scraping. More popular for scraping is the python library called Beautiful Soup. Remember that if you want dependable information recources, it's better to use an API. &lt;/p&gt;</summary><category term="scraping"></category><category term="python"></category><category term="flask"></category><category term="tutorials"></category></entry></feed>